# -*- coding: utf-8 -*-
"""PRODIGY_GA_01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bj3NuD8zrKuNsydUK58q3ZGgZHxpqn6m
"""

!pip install transformers datasets

from transformers import GPT2LMHeadModel, GPT2Tokenizer, Trainer, TrainingArguments, TextDataset, DataCollatorForLanguageModeling
import torch

model_name = "gpt2"  # can be 'gpt2-medium' for better results
tokenizer = GPT2Tokenizer.from_pretrained(model_name)
model = GPT2LMHeadModel.from_pretrained(model_name)

def load_dataset(file_path, tokenizer, block_size=128):
    return TextDataset(
        tokenizer=tokenizer,
        file_path=file_path,
        block_size=block_size
    )

def create_data_collator(tokenizer):
    return DataCollatorForLanguageModeling(
        tokenizer=tokenizer, mlm=False
    )

train_dataset = load_dataset("custom_data.txt", tokenizer)
data_collator = create_data_collator(tokenizer)

training_args = TrainingArguments(
    output_dir="./gpt2-finetuned",
    overwrite_output_dir=True,
    num_train_epochs=3,
    per_device_train_batch_size=2,
    save_steps=500,
    save_total_limit=2,
    prediction_loss_only=True,
    logging_steps=100
)

trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=train_dataset,
    data_collator=data_collator
)

trainer.train()

trainer.save_model("./gpt2-finetuned")
tokenizer.save_pretrained("./gpt2-finetuned")

from transformers import pipeline

generator = pipeline('text-generation', model='./gpt2-finetuned', tokenizer=tokenizer)
prompt = "Once upon a time"
output = generator(prompt, max_length=100, num_return_sequences=1)
print(output[0]['generated_text'])

